{"ast":null,"code":"import { takeLatest, put, all, call } from 'redux-saga/effects';\nimport { userActionTypes } from '../user/user.types';\nimport { createUserProfileDocument, googleProvider, auth, getCurrentUser } from '../../firebase/firebase.utils';\nimport { SignInSuccess, SignInFailure, signOutFailure, signOutSuccess, signUpFailure, signUpSuccess } from './user.actions';\nexport function* getSnapshotFromUserAuth(userAuth) {\n  try {\n    const userRef = yield call(createUserProfileDocument, userAuth);\n    const userSnapShot = yield userRef.get();\n    yield put(SignInSuccess({\n      id: userSnapShot.id,\n      ...userSnapShot.data()\n    }));\n  } catch (error) {\n    yield put(SignInFailure(error));\n  }\n}\nexport function* signInWithGoogle() {\n  try {\n    const {\n      user\n    } = yield auth.signInWithPopup(googleProvider);\n    yield getSnapshotFromUserAuth(user);\n  } catch (error) {\n    yield put(SignInFailure(error));\n  }\n}\nexport function* signInWithEmail({\n  payload: {\n    email,\n    password\n  }\n}) {\n  try {\n    const {\n      user\n    } = yield auth.signInWithEmailAndPassword(email, password);\n    yield getSnapshotFromUserAuth(user);\n  } catch (error) {\n    put(SignInFailure(error));\n  }\n}\nexport function* signUp({\n  payload: {\n    email,\n    password\n  }\n}) {\n  try {\n    const {\n      user\n    } = yield auth.createUserWithEmailAndPassword(email, password);\n    const userRef = yield call(createUserProfileDocument(user));\n    const userSnapShot = yield userRef.get();\n    yield put(signUpSuccess({\n      id: userSnapShot.id,\n      ...userSnapShot.data()\n    }));\n  } catch (error) {\n    yield put(signUpFailure(error));\n  }\n}\nexport function* isUserAuthenticated() {\n  try {\n    const userAuth = yield getCurrentUser();\n    if (!userAuth) return;\n    yield getSnapshotFromUserAuth(userAuth);\n  } catch (error) {\n    yield put(SignInFailure(error));\n  }\n}\nexport function* signOut() {\n  try {\n    yield auth.signOut();\n    yield put(signOutSuccess());\n  } catch (error) {\n    yield put(signOutFailure(error));\n  }\n}\nexport function* onGoogleSignInStart() {\n  yield takeLatest(userActionTypes.GOOGLE_SIGN_IN_START, signInWithGoogle);\n}\nexport function* onEmailSignInStart() {\n  yield takeLatest(userActionTypes.EMAIL_SIGN_IN_START, signInWithEmail);\n}\nexport function* onCheckUserSession() {\n  yield takeLatest(userActionTypes.CHECK_USER_SESSION, isUserAuthenticated);\n}\nexport function* onSignOutStart() {\n  yield takeLatest(userActionTypes.SIGN_OUT_START, signOut);\n}\nexport function* onSignUpStart() {\n  yield takeLatest(userActionTypes.SIGN_UP_START);\n}\nexport function* userSagas() {\n  yield all([call(onGoogleSignInStart), call(onEmailSignInStart), call(onCheckUserSession), call(onSignOutStart), call(onSignUpStart)]);\n}","map":{"version":3,"sources":["C:/Users/bonaf/Desktop/Projects/Ecommerce/TestShop/testshop/src/redux/user/user.sagas.js"],"names":["takeLatest","put","all","call","userActionTypes","createUserProfileDocument","googleProvider","auth","getCurrentUser","SignInSuccess","SignInFailure","signOutFailure","signOutSuccess","signUpFailure","signUpSuccess","getSnapshotFromUserAuth","userAuth","userRef","userSnapShot","get","id","data","error","signInWithGoogle","user","signInWithPopup","signInWithEmail","payload","email","password","signInWithEmailAndPassword","signUp","createUserWithEmailAndPassword","isUserAuthenticated","signOut","onGoogleSignInStart","GOOGLE_SIGN_IN_START","onEmailSignInStart","EMAIL_SIGN_IN_START","onCheckUserSession","CHECK_USER_SESSION","onSignOutStart","SIGN_OUT_START","onSignUpStart","SIGN_UP_START","userSagas"],"mappings":"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","sourcesContent":["import { takeLatest, put, all, call } from 'redux-saga/effects';\r\nimport {userActionTypes} from'../user/user.types'\r\nimport {createUserProfileDocument, googleProvider, auth, getCurrentUser} from '../../firebase/firebase.utils';\r\nimport {SignInSuccess,SignInFailure, signOutFailure,signOutSuccess, signUpFailure, signUpSuccess } from './user.actions'\r\n\r\n\r\nexport function* getSnapshotFromUserAuth(userAuth) {\r\n    try {\r\n    const userRef = yield call(createUserProfileDocument, userAuth)\r\n    const userSnapShot = yield userRef.get();\r\n    yield put(SignInSuccess({id: userSnapShot.id, ...userSnapShot.data()}))\r\n} catch(error) {\r\n    yield put(SignInFailure(error));\r\n}\r\n}\r\n\r\n\r\nexport function* signInWithGoogle() {\r\n    try {\r\n        const { user } = yield auth.signInWithPopup(googleProvider);\r\n        yield getSnapshotFromUserAuth(user)\r\n    } catch(error) {\r\n        yield put(SignInFailure(error));\r\n    }\r\n}\r\n\r\n\r\nexport function* signInWithEmail({payload: {email, password}}) {\r\n    try{\r\n        const { user } = yield auth.signInWithEmailAndPassword(email, password)\r\n        yield getSnapshotFromUserAuth(user)\r\n    } catch(error) {\r\n        put(SignInFailure(error))\r\n    }\r\n}\r\n\r\nexport function* signUp({payload: {email, password}}) {\r\n\r\n    try {\r\n        const {user} = yield auth.createUserWithEmailAndPassword(email, password)\r\n        const userRef = yield call(createUserProfileDocument(user));\r\n        const userSnapShot = yield userRef.get();\r\n        yield put(signUpSuccess({id: userSnapShot.id, ...userSnapShot.data()}))\r\n    } catch (error) {\r\n        yield (put(signUpFailure(error)))\r\n    }\r\n\r\n\r\n}\r\n\r\n\r\nexport function* isUserAuthenticated() {\r\n    try {\r\n        const userAuth = yield getCurrentUser();\r\n        if (!userAuth) return;\r\n        yield getSnapshotFromUserAuth(userAuth)\r\n    } catch(error) {\r\n        yield put(SignInFailure(error))\r\n    }\r\n}\r\n\r\nexport function* signOut() {\r\n    try{\r\n        yield auth.signOut()\r\n        yield (put(signOutSuccess()))\r\n    } catch(error) {\r\n        yield (put(signOutFailure(error)))\r\n    }\r\n}\r\n\r\nexport function* onGoogleSignInStart() {\r\n    yield takeLatest(userActionTypes.GOOGLE_SIGN_IN_START, signInWithGoogle)\r\n}\r\n\r\n\r\nexport function* onEmailSignInStart() {\r\n\r\n    yield takeLatest(userActionTypes.EMAIL_SIGN_IN_START, signInWithEmail)\r\n\r\n}\r\n\r\nexport function* onCheckUserSession() {\r\n    yield takeLatest(userActionTypes.CHECK_USER_SESSION, isUserAuthenticated )\r\n}\r\n\r\n\r\nexport function* onSignOutStart() {\r\n    yield takeLatest(userActionTypes.SIGN_OUT_START, signOut)\r\n}\r\n\r\nexport function* onSignUpStart() {\r\n    yield takeLatest(userActionTypes.SIGN_UP_START,  )\r\n}\r\n\r\n\r\nexport function* userSagas() {\r\n    yield all([call(onGoogleSignInStart), call(onEmailSignInStart), call(onCheckUserSession),\r\n    call(onSignOutStart),\r\n    call(onSignUpStart)\r\n    ])\r\n}"]},"metadata":{},"sourceType":"module"}