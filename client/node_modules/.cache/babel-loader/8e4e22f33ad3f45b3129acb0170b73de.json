{"ast":null,"code":"import ShopActionTypes from './shop.types';\nimport { firestore, convertCollectionSnapshotToMap } from '../../firebase/firebase.utils';\nexport const fetchCollectionsStart = () => ({\n  type: ShopActionTypes.fetchCollectionsStart\n});\nexport const fetchCollectionsSuccess = collectionsMap => ({\n  type: ShopActionTypes.FETCH_COLLECTIONS_SUCCESS,\n  payload: collectionsMap\n});\nexport const fetchCollectionsFailure = error => ({\n  type: ShopActionTypes.FETCH_COLLECTIONS_FAILURE,\n  payload: error\n});\nexport const fetchCollectionsStartAsync = () => {\n  return dispatch => {\n    const collectionRef = firestore.collection('collections');\n    dispatch(fetchCollectionsStart());\n    collectionRef.get().then(snapshot => {\n      const collectionsMap = convertCollectionSnapshotToMap(snapshot);\n      dispatch(fetchCollectionsSuccess(collectionsMap));\n    }).catch(error => dispatch(fetchCollectionsFailure(error.message)));\n  };\n};","map":{"version":3,"sources":["C:/Users/bonaf/Desktop/Projects/Ecommerce/TestShop/testshop/src/redux/shop/shop.actions.js"],"names":["ShopActionTypes","firestore","convertCollectionSnapshotToMap","fetchCollectionsStart","type","fetchCollectionsSuccess","collectionsMap","FETCH_COLLECTIONS_SUCCESS","payload","fetchCollectionsFailure","error","FETCH_COLLECTIONS_FAILURE","fetchCollectionsStartAsync","dispatch","collectionRef","collection","get","then","snapshot","catch","message"],"mappings":"AAAA,OAAOA,eAAP,MAA4B,cAA5B;AACA,SAASC,SAAT,EAAoBC,8BAApB,QAAyD,+BAAzD;AAEA,OAAO,MAAMC,qBAAqB,GAAG,OAAO;AACxCC,EAAAA,IAAI,EAAEJ,eAAe,CAACG;AADkB,CAAP,CAA9B;AAKP,OAAO,MAAME,uBAAuB,GAAGC,cAAc,KAAK;AACtDF,EAAAA,IAAI,EAAEJ,eAAe,CAACO,yBADgC;AAEtDC,EAAAA,OAAO,EAAEF;AAF6C,CAAL,CAA9C;AAIP,OAAO,MAAMG,uBAAuB,GAAGC,KAAK,KAAK;AAC7CN,EAAAA,IAAI,EAAEJ,eAAe,CAACW,yBADuB;AAE7CH,EAAAA,OAAO,EAAEE;AAFoC,CAAL,CAArC;AAKP,OAAO,MAAME,0BAA0B,GAAG,MAAM;AAC5C,SAAOC,QAAQ,IAAI;AACf,UAAMC,aAAa,GAAGb,SAAS,CAACc,UAAV,CAAqB,aAArB,CAAtB;AACAF,IAAAA,QAAQ,CAACV,qBAAqB,EAAtB,CAAR;AACAW,IAAAA,aAAa,CAACE,GAAd,GAAoBC,IAApB,CAA0BC,QAAQ,IAAI;AAClC,YAAMZ,cAAc,GAAGJ,8BAA8B,CAACgB,QAAD,CAArD;AACAL,MAAAA,QAAQ,CAACR,uBAAuB,CAACC,cAAD,CAAxB,CAAR;AACH,KAHD,EAGGa,KAHH,CAGST,KAAK,IAAIG,QAAQ,CAACJ,uBAAuB,CAACC,KAAK,CAACU,OAAP,CAAxB,CAH1B;AAKH,GARD;AASH,CAVM","sourcesContent":["import ShopActionTypes from './shop.types';\r\nimport  {firestore, convertCollectionSnapshotToMap} from '../../firebase/firebase.utils'\r\n\r\nexport const fetchCollectionsStart = () => ({\r\n    type: ShopActionTypes.fetchCollectionsStart,\r\n\r\n})\r\n\r\nexport const fetchCollectionsSuccess = collectionsMap => ({\r\n    type: ShopActionTypes.FETCH_COLLECTIONS_SUCCESS,\r\n    payload: collectionsMap\r\n})\r\nexport const fetchCollectionsFailure = error => ({\r\n    type: ShopActionTypes.FETCH_COLLECTIONS_FAILURE,\r\n    payload: error\r\n})\r\n\r\nexport const fetchCollectionsStartAsync = () => {\r\n    return dispatch => {\r\n        const collectionRef = firestore.collection('collections');\r\n        dispatch(fetchCollectionsStart());\r\n        collectionRef.get().then( snapshot => {\r\n            const collectionsMap = convertCollectionSnapshotToMap(snapshot)\r\n            dispatch(fetchCollectionsSuccess(collectionsMap));\r\n        }).catch(error => dispatch(fetchCollectionsFailure(error.message)));\r\n        \r\n    }\r\n}"]},"metadata":{},"sourceType":"module"}