{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\bonaf\\\\Desktop\\\\Projects\\\\Ecommerce\\\\TestShop\\\\testshop\\\\src\\\\components\\\\signin\\\\signin.component.jsx\";\nimport React from 'react';\nimport './signin.styles.scss';\nimport FormInput from '../form-input/form-input.component';\nimport CustomButton from '../customButtton/custom-button.component';\nimport { googleSignInStart, emailSignInStart } from '../../redux/user/user.actions';\nimport { connect } from 'react-redux';\n\nclass SignIn extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.handleChange = event => {\n      const {\n        value,\n        name\n      } = event.target;\n      this.setState({\n        [name]: value\n      });\n    };\n\n    this.handleSubmit = async event => {\n      event.preventDefault();\n      const {\n        email,\n        password\n      } = this.state;\n    };\n\n    this.state = {\n      email: '',\n      password: ''\n    };\n  }\n\n  render() {\n    const {\n      googleSignInStart\n    } = this.props;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"sign-in\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"h2\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 17\n      }\n    }, \"I already have an account\"), /*#__PURE__*/React.createElement(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 17\n      }\n    }, \"Sign in with your email and password\"), /*#__PURE__*/React.createElement(\"form\", {\n      onSubmit: this.handleSubmit,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(FormInput, {\n      name: \"email\",\n      type: \"email\",\n      handleChange: this.handleChange,\n      value: this.state.email,\n      label: \"email\",\n      required: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 21\n      }\n    }), /*#__PURE__*/React.createElement(FormInput, {\n      name: \"password\",\n      type: \"password\",\n      label: \"password\",\n      value: this.state.password,\n      handleChange: this.handleChange,\n      required: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 21\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"buttons\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(CustomButton, {\n      type: \"submit\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 25\n      }\n    }, \"Sign In\"), /*#__PURE__*/React.createElement(CustomButton, {\n      type: \"button\",\n      onClick: googleSignInStart,\n      isGoogleSignIn: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 25\n      }\n    }, \"Sign in with Google\", ' '))));\n  }\n\n}\n\nconst mapDispatchToProps = dispatch => ({\n  googleSignInStart: () => dispatch(googleSignInStart()),\n  emailSignInStart: (email, password) => dispatch(emailSignInStart({\n    email,\n    password\n  }))\n});\n\nexport default connect(null, mapDispatchToProps)(SignIn);","map":{"version":3,"sources":["C:/Users/bonaf/Desktop/Projects/Ecommerce/TestShop/testshop/src/components/signin/signin.component.jsx"],"names":["React","FormInput","CustomButton","googleSignInStart","emailSignInStart","connect","SignIn","Component","constructor","props","handleChange","event","value","name","target","setState","handleSubmit","preventDefault","email","password","state","render","mapDispatchToProps","dispatch"],"mappings":"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","sourcesContent":["import React from 'react';\r\n\r\nimport './signin.styles.scss';\r\n\r\nimport FormInput from '../form-input/form-input.component';\r\nimport CustomButton from '../customButtton/custom-button.component';\r\nimport {googleSignInStart, emailSignInStart} from '../../redux/user/user.actions';\r\nimport {connect} from 'react-redux'\r\n\r\nclass SignIn extends React.Component {\r\n    constructor(props) {\r\n        super(props)\r\n\r\n        this.state = {\r\n            email:'',\r\n            password: '',\r\n        }\r\n    }\r\n\r\n    handleChange = event => {\r\n        const {value, name} = event.target;\r\n        this.setState({[name]:value})\r\n    }\r\n\r\n    handleSubmit = async event => {\r\n        event.preventDefault();\r\n\r\n        const {email, password} = this.state;\r\n\r\n\r\n\r\n    }\r\n\r\n    render() {\r\n        const {googleSignInStart} = this.props\r\n        return (\r\n            <div className='sign-in'>\r\n                <h2>I already have an account</h2>\r\n                <span>Sign in with your email and password</span>\r\n\r\n                <form onSubmit={this.handleSubmit}>\r\n                    <FormInput \r\n                    name='email' \r\n                    type='email'\r\n                    handleChange={this.handleChange} \r\n                    value={this.state.email} \r\n                    label='email'\r\n                    required \r\n                    />\r\n                    <FormInput \r\n                    name='password' \r\n                    type='password'\r\n                    label='password' \r\n                    value={this.state.password} \r\n                    handleChange={this.handleChange}\r\n                    required \r\n                    />\r\n                    <div className='buttons'>\r\n                        <CustomButton type='submit'>\r\n                            Sign In\r\n                        </CustomButton>\r\n                        <CustomButton type='button' onClick={googleSignInStart} isGoogleSignIn>\r\n                            Sign in with Google{' '}\r\n                        </CustomButton>\r\n                    </div>\r\n                </form>\r\n\r\n            </div>\r\n    )}\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n    googleSignInStart: () => dispatch(googleSignInStart()),\r\n    emailSignInStart: (email, password) => dispatch(emailSignInStart({email,password}))\r\n})\r\n\r\n\r\nexport default connect(null,mapDispatchToProps)(SignIn);"]},"metadata":{},"sourceType":"module"}