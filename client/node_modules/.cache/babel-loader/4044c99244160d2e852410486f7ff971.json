{"ast":null,"code":"import { takeEvery } from 'redux-saga/effects';\nimport { firestore, convertCollectionSnapshotToMap } from '../../firebase/firebase.utils';\nimport ShopActionTypes from './shop.types';\nimport { fetchCollectionsSuccess, fetchCollectionsFailure } from './shop.actions';\nexport function* fetchCollectionsAsync() {\n  yield console.log('fired');\n  const collectionRef = firestore.collection('collections');\n  collectionRef.get().then(snapshot => {\n    const collectionsMap = convertCollectionSnapshotToMap(snapshot);\n    dispatch(fetchCollectionsSuccess(collectionsMap));\n  }).catch(error => dispatch(fetchCollectionsFailure(error.message)));\n}\nexport function* fetchCollectionsStart() {\n  yield takeEvery(ShopActionTypes.FETCH_COLLECTIONS_START, fetchCollectionsAsync);\n}","map":{"version":3,"sources":["C:/Users/bonaf/Desktop/Projects/Ecommerce/TestShop/testshop/src/redux/shop/shop.sagas.js"],"names":["takeEvery","firestore","convertCollectionSnapshotToMap","ShopActionTypes","fetchCollectionsSuccess","fetchCollectionsFailure","fetchCollectionsAsync","console","log","collectionRef","collection","get","then","snapshot","collectionsMap","dispatch","catch","error","message","fetchCollectionsStart","FETCH_COLLECTIONS_START"],"mappings":"AAAA,SAASA,SAAT,QAA0B,oBAA1B;AACA,SAAQC,SAAR,EAAmBC,8BAAnB,QAAwD,+BAAxD;AACA,OAAOC,eAAP,MAA4B,cAA5B;AACA,SAAQC,uBAAR,EAAiCC,uBAAjC,QAA+D,gBAA/D;AAEA,OAAO,UAAUC,qBAAV,GAAkC;AACrC,QAAMC,OAAO,CAACC,GAAR,CAAY,OAAZ,CAAN;AACA,QAAMC,aAAa,GAAGR,SAAS,CAACS,UAAV,CAAqB,aAArB,CAAtB;AACID,EAAAA,aAAa,CACZE,GADD,GAEAC,IAFA,CAEMC,QAAQ,IAAI;AACd,UAAMC,cAAc,GAAGZ,8BAA8B,CAACW,QAAD,CAArD;AACAE,IAAAA,QAAQ,CAACX,uBAAuB,CAACU,cAAD,CAAxB,CAAR;AACH,GALD,EAKGE,KALH,CAKSC,KAAK,IAAIF,QAAQ,CAACV,uBAAuB,CAACY,KAAK,CAACC,OAAP,CAAxB,CAL1B;AAOP;AAGD,OAAO,UAAUC,qBAAV,GAAkC;AACrC,QAAMnB,SAAS,CACXG,eAAe,CAACiB,uBADL,EAEXd,qBAFW,CAAf;AAIH","sourcesContent":["import { takeEvery } from 'redux-saga/effects';\r\nimport {firestore, convertCollectionSnapshotToMap} from '../../firebase/firebase.utils';\r\nimport ShopActionTypes from './shop.types';\r\nimport {fetchCollectionsSuccess, fetchCollectionsFailure} from './shop.actions'\r\n\r\nexport function* fetchCollectionsAsync() {\r\n    yield console.log('fired')\r\n    const collectionRef = firestore.collection('collections');\r\n        collectionRef\r\n        .get().\r\n        then( snapshot => {\r\n            const collectionsMap = convertCollectionSnapshotToMap(snapshot)\r\n            dispatch(fetchCollectionsSuccess(collectionsMap));\r\n        }).catch(error => dispatch(fetchCollectionsFailure(error.message)));\r\n        \r\n}\r\n\r\n\r\nexport function* fetchCollectionsStart() {\r\n    yield takeEvery(\r\n        ShopActionTypes.FETCH_COLLECTIONS_START, \r\n        fetchCollectionsAsync\r\n    );\r\n}"]},"metadata":{},"sourceType":"module"}